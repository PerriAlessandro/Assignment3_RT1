<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegoal__reaching" kind="namespace" language="Python">
    <compoundname>goal_reaching</compoundname>
    <innerclass refid="classgoal__reaching_1_1colors" prot="public">goal_reaching::colors</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegoal__reaching_1a59c70459270a4ebf4a1b03905a4145ad" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string goal_reaching.msg1</definition>
        <argsstring></argsstring>
        <name>msg1</name>
        <initializer>=  &quot;Goal Reaching Modality!&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="48" column="1" bodyfile="scripts/goal_reaching.py" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegoal__reaching_1a12776eabefcb593ded2f229927b3e101" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string goal_reaching.msg2</definition>
        <argsstring></argsstring>
        <name>msg2</name>
        <initializer>=  &quot;(Press &apos;1&apos; from &apos;user_interface&apos; console to start this modality)&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="49" column="1" bodyfile="scripts/goal_reaching.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegoal__reaching_1a4aabdf549424d7138e37e3a5c56f8a3f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int goal_reaching.currentmode</definition>
        <argsstring></argsstring>
        <name>currentmode</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="52" column="1" bodyfile="scripts/goal_reaching.py" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegoal__reaching_1ae8f821e815a4f8f62830bc804e33ee68" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool goal_reaching.done_cb</definition>
        <argsstring></argsstring>
        <name>done_cb</name>
        <initializer>= False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="53" column="1" bodyfile="scripts/goal_reaching.py" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegoal__reaching_1ae5adab937da263541d48b2bc54aaa530" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool goal_reaching.goal_set</definition>
        <argsstring></argsstring>
        <name>goal_set</name>
        <initializer>= False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="54" column="1" bodyfile="scripts/goal_reaching.py" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegoal__reaching_1a7010074e498a0e4b9593aec46657f07a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool goal_reaching.isTimeout</definition>
        <argsstring></argsstring>
        <name>isTimeout</name>
        <initializer>= False</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="55" column="1" bodyfile="scripts/goal_reaching.py" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegoal__reaching_1a96f3a53b482d5701d9cb7e0887bf8514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.callback_active</definition>
        <argsstring>()</argsstring>
        <name>callback_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback function which is called when the action starts</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="57" column="1" bodyfile="scripts/goal_reaching.py" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1a824ef1cc45a5ba12b5d6e7739e6e9426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.callback_done</definition>
        <argsstring>(state, result)</argsstring>
        <name>callback_done</name>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <param>
          <type>result</type>
          <defname>result</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback function which is called when the action is over

Args:
    state(actionlib_msgs/GoalStatus): status of the goal, the message is of type &apos;actionlib_msgs/GoalStatus.msg&apos;
    result(MoveBaseResult):result of the goal </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="64" column="1" bodyfile="scripts/goal_reaching.py" bodystart="64" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1a044ce5c89acd2c02ed53cb0ac6bfd509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.callback_feedback</definition>
        <argsstring>(feedback)</argsstring>
        <name>callback_feedback</name>
        <param>
          <type>feedback</type>
          <defname>feedback</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback function which is called during the execution of the action

Args:
    feedback(move_base_msgs/MoveBaseActionFeedback.msg): contains infos about the Pose with reference coordinate and timestamp</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="104" column="1" bodyfile="scripts/goal_reaching.py" bodystart="104" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1af434fcef95ec580f038c3fc78af9f213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.set_action</definition>
        <argsstring>()</argsstring>
        <name>set_action</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Set-up of the action on the client-side</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="114" column="1" bodyfile="scripts/goal_reaching.py" bodystart="114" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1acea0b83b9e09022e1737baa93ad3aa70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.set_goal</definition>
        <argsstring>(goal_x_coord, goal_y_coord)</argsstring>
        <name>set_goal</name>
        <param>
          <type>goal_x_coord</type>
          <defname>goal_x_coord</defname>
        </param>
        <param>
          <type>goal_y_coord</type>
          <defname>goal_y_coord</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to set the goal

Args:
    goal_x_coord(double): &apos;x&apos; coordinate of the goal that has to be achieved
    goal_y_coord(double): &apos;y&apos; coordinate of the goal that has to be achieved</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="130" column="1" bodyfile="scripts/goal_reaching.py" bodystart="130" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1aa964f52c3a4f8b8d9513a59414170150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.my_clbk_timeout</definition>
        <argsstring>(event)</argsstring>
        <name>my_clbk_timeout</name>
        <param>
          <type>event</type>
          <defname>event</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Function to cancel the goal if its time has expired

Args:
    event(TimerObject): object which includes many infos such as the moment when the callback is called and the duration
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="149" column="1" bodyfile="scripts/goal_reaching.py" bodystart="149" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1a4bc3fa1bb43eff3aa194fb08034a05e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.mode_callback</definition>
        <argsstring>(data)</argsstring>
        <name>mode_callback</name>
        <param>
          <type>data</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Callback function to set the local variable of the current mode if it has been changed by a node

Args:
    data(int): integer representing the current modality
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="162" column="1" bodyfile="scripts/goal_reaching.py" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="namespacegoal__reaching_1a82d2863986ccfc81148b28484a9c2b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def goal_reaching.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Main function: if this modality is choosen by the user, it asks the user to insert a given position and therefore sets the action and the goal.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/goal_reaching.py" line="175" column="1" bodyfile="scripts/goal_reaching.py" bodystart="175" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module::goal_reaching
    :platform: Unix
    :synopsis: Python module for the autonomous driving
.. moduleauthor:: Alessandro Perri s4476726@studenti.unige.it

Subscribes to:
    /mode to retrieve the current modality

Publishes to:
    /timeout 
    /mode to change the modality if the user wants to quit

This node implements the first modality i.e. the autonomous navigation towards a certain position
</verbatim> </para>
    </detaileddescription>
    <location file="scripts/goal_reaching.py" line="1" column="1"/>
  </compounddef>
</doxygen>
