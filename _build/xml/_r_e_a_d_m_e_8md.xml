<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">__Research<sp/>Track<sp/>1<sp/><sp/>-<sp/><sp/>Third<sp/>Assignment__<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">================================</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>the<sp/>third<sp/>assignment<sp/>of<sp/>the<sp/>&quot;Research<sp/>Track<sp/>I&quot;<sp/>course.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>aim<sp/>of<sp/>this<sp/>project<sp/>consists<sp/>in<sp/>creating<sp/>a<sp/>package<sp/>in<sp/>which<sp/>the<sp/>user<sp/>will<sp/>be<sp/>free<sp/>to<sp/>use<sp/>three<sp/>different<sp/>modalities<sp/>for<sp/>moving<sp/>the<sp/>robot<sp/>that&apos;ll<sp/>be<sp/>better<sp/>explained<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>section:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__autonomously<sp/>reach<sp/>a<sp/>x,y<sp/>coordinate<sp/>inserted<sp/>by<sp/>the<sp/>user__;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__let<sp/>the<sp/>user<sp/>drive<sp/>with<sp/>the<sp/>keyboard__<sp/>;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__let<sp/>the<sp/>user<sp/>drive<sp/>the<sp/>robot<sp/>assisting<sp/>them<sp/>to<sp/>avoid<sp/>collisions__.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">__How<sp/>to<sp/>run__</highlight></codeline>
<codeline><highlight class="normal">----------------------</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Installation</highlight></codeline>
<codeline><highlight class="normal">This<sp/>project<sp/>is<sp/>based<sp/>on<sp/>the<sp/>ROS<sp/>Noetic<sp/>enviroment,<sp/>if<sp/>you<sp/>havent<sp/>installed<sp/>it<sp/>yet,<sp/>follow<sp/>the<sp/>instructions<sp/>in<sp/>this<sp/>link<sp/>[noetic/Installation/Ubuntu<sp/>-<sp/>ROS<sp/>Wiki](http://wiki.ros.org/noetic/Installation/Ubuntu).</highlight></codeline>
<codeline><highlight class="normal">Once<sp/>you<sp/>have<sp/>installed<sp/>ROS,<sp/>you<sp/>will<sp/>need<sp/>to<sp/>clone<sp/>this<sp/>repository<sp/>into<sp/>the<sp/>src/<sp/>folder<sp/>of<sp/>your<sp/>workspace:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>https://www.github.com/PerriAlessandro/final_assignment</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">You<sp/>will<sp/>also<sp/>need<sp/>to<sp/>download<sp/>__xterm__,<sp/>the<sp/>__slam_gmapping__<sp/>package<sp/>and<sp/>the<sp/>ROS<sp/>navigation<sp/>stack:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>apt<sp/>install<sp/>xterm</highlight></codeline>
<codeline><highlight class="normal">git<sp/>clone<sp/>https://www.github.com/CarmineD8/slam_gmapping</highlight></codeline>
<codeline><highlight class="normal">sudo<sp/>apt-get<sp/>install<sp/>ros-noetic-navigation</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Launch<sp/>the<sp/>simulator</highlight></codeline>
<codeline><highlight class="normal">To<sp/>properly<sp/>launch<sp/>the<sp/>project,<sp/>you<sp/>should<sp/>run<sp/>three<sp/>different<sp/>*.launch*<sp/>files:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__simulation_gmapping.launch__,<sp/>to<sp/>launch<sp/>the<sp/>simulation;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__move_base.launch__,<sp/>to<sp/>manage<sp/>the<sp/>movement<sp/>of<sp/>the<sp/>robot;</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__final_assignment.launch__,<sp/>to<sp/>launch<sp/>the<sp/>three<sp/>nodes<sp/>I<sp/>implemented<sp/>for<sp/>the<sp/>UI<sp/>and<sp/>the<sp/>three<sp/>modalities.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>avoid<sp/>launching<sp/>every<sp/>time<sp/>all<sp/>those<sp/>files,<sp/>I<sp/>created<sp/>a<sp/>.launch<sp/>file<sp/>to<sp/>run<sp/>them<sp/>using<sp/>only<sp/>a<sp/>command<sp/>line,<sp/>so<sp/>you<sp/>only<sp/>need<sp/>to<sp/>run<sp/>this:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">roslaunch<sp/>final_assignment<sp/>run.launch</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">__Description__</highlight></codeline>
<codeline><highlight class="normal">----------------------</highlight></codeline>
<codeline><highlight class="normal">As<sp/>said<sp/>in<sp/>the<sp/>intro,<sp/>the<sp/>aim<sp/>of<sp/>the<sp/>assignment<sp/>was<sp/>creating<sp/>some<sp/>ROS<sp/>nodes<sp/>to<sp/>properly<sp/>manage<sp/>three<sp/>different<sp/>modalities<sp/>that<sp/>let<sp/>the<sp/>robot<sp/>move<sp/>inside<sp/>the<sp/>map.<sp/></highlight></codeline>
<codeline><highlight class="normal">To<sp/>do<sp/>that,<sp/>I<sp/>created<sp/>three<sp/>Python<sp/>scripts:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>__user_interface.py__,<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>__goal_reaching.py__</highlight></codeline>
<codeline><highlight class="normal">-<sp/>__teleop.py__</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>User<sp/>Interface</highlight></codeline>
<codeline><highlight class="normal">The<sp/>first<sp/>one<sp/>is<sp/>the<sp/>User<sp/>Interface<sp/>that<sp/>lets<sp/>the<sp/>user<sp/>switch<sp/>between<sp/>the<sp/>modalities,<sp/>including<sp/>the<sp/>&apos;idle&apos;<sp/>one<sp/>(i.e.<sp/>when<sp/>no<sp/>mode<sp/>is<sp/>active).<sp/>The<sp/>command<sp/>is<sp/>given<sp/>by<sp/>a<sp/>user<sp/>keyboard<sp/>input<sp/>and<sp/>it<sp/>is<sp/>sent<sp/>to<sp/>the<sp/>other<sp/>nodes<sp/>using<sp/>ROS<sp/>topics.</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Autonomous<sp/>Driving</highlight></codeline>
<codeline><highlight class="normal">The<sp/>second<sp/>script,<sp/>as<sp/>the<sp/>name<sp/>may<sp/>suggest,<sp/>implements<sp/>the<sp/>&apos;Autonomous<sp/>Driving<sp/>modality&apos;.<sp/>The<sp/>user<sp/>will<sp/>be<sp/>asked<sp/>to<sp/>insert<sp/>the<sp/>&apos;x&apos;<sp/>and<sp/>&apos;y&apos;<sp/>coordinates<sp/>to<sp/>which<sp/>the<sp/>robot<sp/>will<sp/>navigate.<sp/>The<sp/>whole<sp/>task<sp/>is<sp/>accomplished<sp/>by<sp/>a<sp/>__ROS<sp/>action__.<sp/>A<sp/>60<sp/>seconds<sp/>timeout<sp/>is<sp/>set,<sp/>so<sp/>if<sp/>the<sp/>request<sp/>cannot<sp/>be<sp/>accomplished<sp/>the<sp/>goal<sp/>will<sp/>be<sp/>cancelled.<sp/>The<sp/>user<sp/>can<sp/>also<sp/>cancel<sp/>the<sp/>goal<sp/>before<sp/>the<sp/>time<sp/>is<sp/>over,<sp/>it<sp/>is<sp/>sufficient<sp/>to<sp/>return<sp/>to<sp/>the<sp/>&apos;idle&apos;<sp/>status<sp/>by<sp/>pressing<sp/>&apos;0&apos;<sp/>on<sp/>the<sp/>UI<sp/>console.</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Manual<sp/>Driving</highlight></codeline>
<codeline><highlight class="normal">The<sp/>third<sp/>script<sp/>implements<sp/>both<sp/>the<sp/>__Assisted__<sp/>and<sp/>__Not<sp/>Assisted<sp/>Driving__.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>script<sp/>is<sp/>essentially<sp/>a<sp/>revisitation<sp/>of<sp/>__teleop_twist_keyboard__<sp/>because<sp/>this<sp/>one<sp/>already<sp/>lets<sp/>the<sp/>robot<sp/>move<sp/>using<sp/>keyboard<sp/>inputs,<sp/>so<sp/>the<sp/>main<sp/>part<sp/>on<sp/>which<sp/>I<sp/>worked<sp/>was<sp/>related<sp/>to<sp/>the<sp/>Assisted<sp/>Driving<sp/>modality.</highlight></codeline>
<codeline><highlight class="normal">In<sp/>a<sp/>nutshell,<sp/>this<sp/>last<sp/>mode<sp/>makes<sp/>a<sp/>subscription<sp/>to<sp/>_/scan_<sp/>topic<sp/>in<sp/>order<sp/>to<sp/>check<sp/>if<sp/>a<sp/>certain<sp/>direction<sp/>is<sp/>free<sp/>or<sp/>if<sp/>there<sp/>is<sp/>an<sp/>obstacle<sp/>(e.g.<sp/>a<sp/>wall).<sp/>Note<sp/>that<sp/>the<sp/>robot<sp/>can<sp/>&apos;see&apos;<sp/>through<sp/>its<sp/>lasers<sp/>only<sp/>within<sp/>a<sp/><sp/>+-90<sp/>relative<sp/>degrees<sp/>range,<sp/>so<sp/>it<sp/>won&apos;t<sp/>be<sp/>able<sp/>to<sp/>avoid<sp/>an<sp/>obstacle<sp/>if<sp/>it<sp/>is<sp/>moving<sp/>backward.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>user<sp/>can<sp/>__quit__<sp/>both<sp/>the<sp/>modalities<sp/>by<sp/>pressing<sp/>`p`<sp/>from<sp/>the<sp/>__teleop<sp/>console__,<sp/>or<sp/>alternatively<sp/>by<sp/>pressing<sp/>another<sp/>command<sp/>from<sp/>__UI<sp/>console__.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">__Pseudocodes__</highlight></codeline>
<codeline><highlight class="normal">----------------------</highlight></codeline>
<codeline><highlight class="normal">Here<sp/>you<sp/>can<sp/>find<sp/>the<sp/>pseudocodes<sp/>for<sp/>the<sp/>three<sp/>scripts:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>user_interface.py</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">while<sp/>true</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>waiting<sp/>for<sp/>a<sp/>command</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>command<sp/>==<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>to<sp/>&apos;idle&apos;<sp/>modality</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>elseif<sp/>command<sp/>==<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>to<sp/>&apos;autonomous<sp/>driving&apos;<sp/>modality</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>elseif<sp/>command<sp/>==<sp/>2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>to<sp/>&apos;manual<sp/>driving<sp/>(not<sp/>assisted)&apos;<sp/>modality</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>elseif<sp/>command<sp/>==<sp/>3</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>to<sp/>&apos;manual<sp/>driving<sp/>(assisted)&apos;<sp/>modality</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>elseif<sp/>command<sp/>==<sp/>4</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>quit<sp/>the<sp/>simulation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>key<sp/>pressed<sp/>is<sp/>wrong</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>goal_reaching.py</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">while<sp/>true</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>autonomous<sp/>driving<sp/>mode<sp/>is<sp/>selected</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>the<sp/>goal<sp/>has<sp/>not<sp/>been<sp/>set<sp/>yet</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ask<sp/>the<sp/>user<sp/>to<sp/>insert<sp/>the<sp/>coordinates</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>the<sp/>action</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>the<sp/>timer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>time<sp/>has<sp/>expired</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quit<sp/>mode</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cancel<sp/>the<sp/>goal<sp/>if<sp/>it&apos;s<sp/>still<sp/>pending</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">###<sp/>teleop.py</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">while<sp/>true</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>not<sp/>assisted<sp/>manual<sp/>driving<sp/>mode<sp/>is<sp/>selected</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>freely<sp/>command<sp/>the<sp/>robot<sp/>with<sp/>keyboard</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>elseif<sp/>assisted<sp/>manual<sp/>driving<sp/>mode<sp/>is<sp/>selected</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>the<sp/>robot<sp/>with<sp/>keyboard<sp/>but<sp/>with<sp/>filtered<sp/>commands</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>quit<sp/>the<sp/>node<sp/>if<sp/>it&apos;s<sp/>still<sp/>running</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">__Possible<sp/>Improvements__</highlight></codeline>
<codeline><highlight class="normal">----------------------</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
